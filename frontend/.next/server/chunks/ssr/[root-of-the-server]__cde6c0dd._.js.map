{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///D:/ProConnect/frontend/config/index.jsx"],"sourcesContent":["const { default : axios } = require(\"axios\");\r\n\r\nexport const clientServer = axios.create({\r\n    baseURL: \"http://localhost:9090\",\r\n})"],"names":[],"mappings":";;;;AAAA,MAAM,EAAE,SAAU,KAAK,EAAE;AAElB,MAAM,eAAe,MAAM,MAAM,CAAC;IACrC,SAAS;AACb","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///D:/ProConnect/frontend/config/redux/action/authAction/index.js"],"sourcesContent":["import { clientServer } from \"@/config\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const loginUser = createAsyncThunk(\r\n    \"user/login\",\r\n    async(user , thunkAPI) =>{\r\n        try{\r\n            const response = await clientServer.post(\"/login\",{\r\n                email :user.email,\r\n                password :user.password\r\n            });\r\n\r\n            if(response.data.token){\r\n                localStorage.setItem(\"token\" , response.data.token)\r\n            }else{\r\n                return thunkAPI.rejectWithValue({\r\n                    message: \"token not provided\"\r\n                })\r\n            }\r\n\r\n            return thunkAPI.fulfillWithValue(response.data.token)\r\n        }catch (error) {\r\n            return thunkAPI.rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"user/register\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(\"/register\", {\r\n        username: user.username,\r\n        password: user.password,\r\n        email: user.email,\r\n        name: user.name,\r\n      });\r\n\r\n      // Check if backend returned a message or token etc.\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n\r\n    } catch (error) {\r\n      // Ensure proper error handling\r\n      return thunkAPI.rejectWithValue(\r\n        error.response?.data || { message: \"Registration failed\" }\r\n      );\r\n    }\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,YAAY,IAAA,+MAAgB,EACrC,cACA,OAAM,MAAO;IACT,IAAG;QACC,MAAM,WAAW,MAAM,gIAAY,CAAC,IAAI,CAAC,UAAS;YAC9C,OAAO,KAAK,KAAK;YACjB,UAAU,KAAK,QAAQ;QAC3B;QAEA,IAAG,SAAS,IAAI,CAAC,KAAK,EAAC;YACnB,aAAa,OAAO,CAAC,SAAU,SAAS,IAAI,CAAC,KAAK;QACtD,OAAK;YACD,OAAO,SAAS,eAAe,CAAC;gBAC5B,SAAS;YACb;QACJ;QAEA,OAAO,SAAS,gBAAgB,CAAC,SAAS,IAAI,CAAC,KAAK;IACxD,EAAC,OAAO,OAAO;QACX,OAAO,SAAS,eAAe,CAAC,MAAM,QAAQ,CAAC,IAAI;IACvD;AACJ;AAGG,MAAM,eAAe,IAAA,+MAAgB,EAC1C,iBACA,OAAO,MAAM;IACX,IAAI;QACF,MAAM,WAAW,MAAM,gIAAY,CAAC,IAAI,CAAC,aAAa;YACpD,UAAU,KAAK,QAAQ;YACvB,UAAU,KAAK,QAAQ;YACvB,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,IAAI;QACjB;QAEA,oDAAoD;QACpD,OAAO,SAAS,gBAAgB,CAAC,SAAS,IAAI;IAEhD,EAAE,OAAO,OAAO;QACd,+BAA+B;QAC/B,OAAO,SAAS,eAAe,CAC7B,MAAM,QAAQ,EAAE,QAAQ;YAAE,SAAS;QAAsB;IAE7D;AACF","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///D:/ProConnect/frontend/config/redux/reducer/authReducer/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { loginUser, registerUser } from \"../../action/authAction\";\r\n\r\nconst initialState = {\r\n  user: [],\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  loggedIn: false,\r\n  message: \"\",\r\n  profileFetched: false,\r\n  connections: [],\r\n  connectionRequest: [],\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    reset: () => initialState,\r\n    handleLoginUser: (state) => {\r\n      state.message = \"hello\";\r\n    },\r\n    emptyMessage: (state) =>{\r\n      state.message =\"\"\r\n    }\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // LOGIN USER\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.message = \"Knocking the door....\";\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.loggedIn = true;\r\n        state.message = \"Login is successful\";\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n\r\n      // REGISTER USER\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.message = \"Registering you...\";\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.loggedIn = false;\r\n        state.message ={\r\n          message:\"Registration successful, Please login\",\r\n        } \r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, emptyMessage } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AAEA,MAAM,eAAe;IACnB,MAAM,EAAE;IACR,SAAS;IACT,WAAW;IACX,WAAW;IACX,UAAU;IACV,SAAS;IACT,gBAAgB;IAChB,aAAa,EAAE;IACf,mBAAmB,EAAE;AACvB;AAEA,MAAM,YAAY,IAAA,0MAAW,EAAC;IAC5B,MAAM;IACN;IACA,UAAU;QACR,OAAO,IAAM;QACb,iBAAiB,CAAC;YAChB,MAAM,OAAO,GAAG;QAClB;QACA,cAAc,CAAC;YACb,MAAM,OAAO,GAAE;QACjB;IACF;IAEA,eAAe,CAAC;QACd,OACE,aAAa;SACZ,OAAO,CAAC,6JAAS,CAAC,OAAO,EAAE,CAAC;YAC3B,MAAM,SAAS,GAAG;YAClB,MAAM,OAAO,GAAG;QAClB,GACC,OAAO,CAAC,6JAAS,CAAC,SAAS,EAAE,CAAC,OAAO;YACpC,MAAM,SAAS,GAAG;YAClB,MAAM,OAAO,GAAG;YAChB,MAAM,SAAS,GAAG;YAClB,MAAM,QAAQ,GAAG;YACjB,MAAM,OAAO,GAAG;QAClB,GACC,OAAO,CAAC,6JAAS,CAAC,QAAQ,EAAE,CAAC,OAAO;YACnC,MAAM,SAAS,GAAG;YAClB,MAAM,OAAO,GAAG;YAChB,MAAM,OAAO,GAAG,OAAO,OAAO;QAChC,EAEA,gBAAgB;SACf,OAAO,CAAC,gKAAY,CAAC,OAAO,EAAE,CAAC;YAC9B,MAAM,SAAS,GAAG;YAClB,MAAM,OAAO,GAAG;QAClB,GACC,OAAO,CAAC,gKAAY,CAAC,SAAS,EAAE,CAAC,OAAO;YACvC,MAAM,SAAS,GAAG;YAClB,MAAM,OAAO,GAAG;YAChB,MAAM,SAAS,GAAG;YAClB,MAAM,QAAQ,GAAG;YACjB,MAAM,OAAO,GAAE;gBACb,SAAQ;YACV;QACF,GACC,OAAO,CAAC,gKAAY,CAAC,QAAQ,EAAE,CAAC,OAAO;YACtC,MAAM,SAAS,GAAG;YAClB,MAAM,OAAO,GAAG;YAChB,MAAM,OAAO,GAAG,OAAO,OAAO;QAChC;IACJ;AACF;AAEO,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,UAAU,OAAO;uCACzC,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///D:/ProConnect/frontend/config/redux/reducer/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./authReducer\";\r\n\r\n\r\n/*\r\nsteps for statemanagemnet\r\nsubmit action\r\nhandle action in its reducer\r\nregister here -> reducer\r\n*/\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n        auth : authReducer\r\n    }\r\n})"],"names":[],"mappings":";;;;AAAA;AACA;;;AAWO,MAAM,QAAQ,IAAA,6MAAc,EAAC;IAChC,SAAQ;QACJ,MAAO,6JAAW;IACtB;AACJ","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///D:/ProConnect/frontend/app/layout.js"],"sourcesContent":["\"use client\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"../config/redux/reducer/store\";\nimport \"./globals.css\";\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <Provider store={store}>\n          {children}\n        </Provider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;;AAMe,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7C,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;sBACC,cAAA,8OAAC,qKAAQ;gBAAC,OAAO,4IAAK;0BACnB;;;;;;;;;;;;;;;;AAKX","debugId":null}}]
}